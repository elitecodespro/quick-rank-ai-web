generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ChapterSet { 
  id      String   @id @default(cuid())
  title   String
  content String[]
  archived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User @relation("UserSavedChapters", fields: [userId], references: [id])
  userId    String
}

model GeneratedPowerpoints {
  id String @id @default(cuid())
  link String
  owner User @relation(fields: [ownerId], references: [id])
  ownerId String
  title String
  description String 
  createdAt DateTime @default(now()) @map("created_at")
}

model Posts { 
  id      String   @id @default(cuid())
  user_id String
  title   String
  content String
  videoId String
  archived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User @relation("UserSavedPosts", fields: [user_id], references: [id])
}

model Summaries { 
  id      String   @id @default(cuid())
  user_id String
  title   String
  content String
  videoId String
  archived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User @relation("UserSavedSummaries", fields: [user_id], references: [id])
}

model SocialMediaPosts { 
  id            String   @id @default(cuid())
  userId        String
  title         String
  content       String
  contentType   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  users         User @relation("UserSavedSocialMediaPosts", fields: [userId], references: [id])
}

model User {
  id                String    @id @default(cuid()) @map("_id")
  clerkId           String?   @unique
  email             String    @unique
  emailVerified     DateTime?
  firstName         String?
  lastName          String?
  isSubscribed      Boolean   @default(false)
  subscriptionEnds  DateTime?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  savedChapters     ChapterSet[] @relation("UserSavedChapters")
  image             String?
  stripe_customer_id        String?
  Powerpoints       GeneratedPowerpoints[]
  savedPosts        Posts[] @relation("UserSavedPosts")
  savedSummaries    Summaries[] @relation("UserSavedSummaries")
  SocialMediaPosts  SocialMediaPosts[] @relation("UserSavedSocialMediaPosts")
  quizzes           Quiz[]
}

model Quiz {
  id          String @id @default(cuid())
  userId      String 
  user        User @relation(fields: [userId], references: [id])
  topic       String @default("")
  questions   Question[]
  videoId String
  archived Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Question {
  id String @id @default(cuid())
  text String
  quizId String
  quiz Quiz @relation(fields: [quizId], references: [id])
  answers Answer[]
}

model Answer {
  id String @id @default(cuid())
  text String 
  questionId String
  question Question @relation(fields: [questionId], references: [id])
  correct Boolean
}
